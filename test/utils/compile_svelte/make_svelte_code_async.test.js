import { deepStrictEqual, strictEqual } from 'assert';
import { describe, it } from 'mocha';
import { make_svelte_code_async } from '../../../src/utils/compile_svelte.js';
import { Cwd } from '../../../src/vars/cwd.js';
import { join } from 'path';
import { to_plain } from '../../../src/utils/to.js';
import Sinon from 'sinon';
import { Logger } from '../../../src/utils/logger.js';
import { read } from '../../../src/utils/file.js';
import { Env } from '../../../src/vars/env.js';
import { EnvType } from '../../../src/struc/env.js';

describe('utils/compile_svelte/make_svelte_code_async', () => {
    const path = join(process.cwd(), 'test', 'utils', 'compile_svelte', '_tests');
    before(() => {
        Cwd.set(path);
    });
    beforeEach(() => {});
    after(() => {
        Cwd.set(undefined);
    });

    it('undefined', async () => {
        deepStrictEqual(await make_svelte_code_async(), '');
    });
    it('simple', async () => {
        deepStrictEqual(
            await make_svelte_code_async(`/* generated by Svelte v3.48.0 */
        import { create_ssr_component } from "svelte/internal";
        
        const Component = create_ssr_component(($$result, $$props, $$bindings, slots) => {
            let { data = null } = $$props;
            if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
            return \`\${slots.default ? slots.default({}) : \`\`}\`;
        });
        
        export default Component;`),
            '/* generated by Svelte v3.48.0 */\n' +
                "        import { create_ssr_component } from '/home/p/wyvr/generator/test/utils/compile_svelte/_tests/gen/server/svelte_internal.mjs';\n" +
                '        \n' +
                '        const Component = await create_ssr_component(async ($$result, $$props, $$bindings, slots) => {\n' +
                '            let { data = null } = $$props;\n' +
                '            if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);\n' +
                '            return `${slots.default ? await slots.default({}) : ``}`;\n' +
                '        });\n' +
                '        \n' +
                '        export default Component;'
        );
    });
});
